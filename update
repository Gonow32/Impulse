os.pullEvent = os.pullEventRaw
local w,h = term.getSize()

function clearScr()
  term.clear()
  term.setCursorPos(1,1)
end

function printCentered(string,y)
  local x = (w/2)-(#string/2)
  term.setCursorPos(x,y)
  term.write(string)
end

function renderUpdater()
  term.setBackgroundColour(colours.lightGrey)
  clearScr()
  term.setBackgroundColour(colours.grey)
  term.clearLine()
  term.setTextColour(colours.black)
  printCentered("Impulse Update",1)
  term.setBackgroundColour(colours.lightGrey)
  term.setCursorPos(1,2)
end

renderUpdater()
local t = http.get("https://raw.githubusercontent.com/Gonow32/Impulse/master/build")
if t then
  local f = fs.open("/build","r")
  local b = f.readAll()
  f.close()
  if b then
    print("You have Impulse "..b..".")
  else
    print("You have an unknown build of Impulse.")
  end
  term.write("Would you like to install Impulse "..t.readAll().."? [Y/N]")
  local event
  local key
  repeat
    event, key = os.pullEvent("key")
  until key == keys.y or key == keys.n
  sleep(0.1)
  if key == keys.n then
    term.setBackgroundColour(colours.black)
    term.setTextColour(colours.white)
    term.clear()
    term.setCursorPos(1,1)
    return
  end
  renderUpdater()
  local t2 = http.get("https://raw.githubusercontent.com/Gonow32/Impulse/master/filelist")
  if t2 then
    local flist = loadstring(t2.readAll())()
    local onepercent = 100 / #flist
    local percentage = 0
    local ok, err = pcall(dofile,"main.config")
    local ok2, err2 = pcall(dofile,"ui.config")
    renderUpdater()
    term.setCursorPos(2,3)
    print("Updating Impulse...")
    for i,v in pairs(flist) do
      local t3 = http.get("https://raw.githubusercontent.com/Gonow32/Impulse/master/"..v)
      if t3 then
        local f = fs.open("/"..v,"w")
        local t4 = t3.readAll()
        if t4 then
          f.write(t4)
        end
        f.close()
        percentage = percentage + onepercent
        local sp = 1
        local found = false
        for i = 1,#tostring(percentage) do
          if tostring(percentage):sub(i,i) == "." then
            sp = i - 1
            found = true
            break
          end
        end
        if found == false then
          sp = #tostring(percentage)
        end
        local sper = "["..tostring(percentage):sub(1,sp).."%]"
        renderUpdater()
        term.setCursorPos(2,3)
        print("Updating Impulse...")
        term.setCursorPos(2, h-1)
        term.write("Downloaded "..v.." "..sper)
      else
        renderUpdater()
        term.setCursorPos(2,h-1)
        printError("Error downloading "..v.." (Returning to GUI)")
        sleep(3)
        term.setBackgroundColour(colours.black)
        clearScr()
        return
      end
    end
    renderUpdater()
    if ok and ok2 then
      if type(err) == "table" and type(err2) == "table" then
        err.firstRun = false
        local t = "return "..textutils.serialize(err)
        local t2 = "return "..textutils.serialize(err2)
        local f = fs.open("main.config","w")
        f.write(t)
        f.close()
        local f2 = fs.open("ui.config","w")
        f2.write(t2)
        f2.close()
      else
        renderUpdater()
        print("Error, exiting in 3 seconds")
        sleep(3)
        return
      end
    else
      renderUpdater()
      print("Error, exiting in 3 seconds")
      sleep(3)
      return
    end
    term.setCursorPos(2,3)
    print("The update has finished downloading.")
    term.setCursorPos((w-1)-7,h-1)
    term.write("Restart")
    local clicked = false
    repeat
      local e = {os.pullEvent()}
      if e[1] == "mouse_click" then
        if e[3] >= (w-1)-7 and e[3] <= w-1 then
          if e[4] == h-1 then
            clicked = true
          end
        end
      end
    until clicked == true
    os.reboot()
  else
    term.setBackgroundColour(colours.black)
    clearScr()
    printError("Server error!")
    return
  end
else
  term.setBackgroundColour(colours.black)
  clearScr()
  printError("Server error!")
  return
end
